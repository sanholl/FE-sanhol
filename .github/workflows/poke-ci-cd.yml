name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # 배포할 브랜치 설정

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker image
        run: |
          docker build -t poke-app ./poke-dex
          docker tag poke-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPOSITORY_NAME }}:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPOSITORY_NAME }}:latest

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install --upgrade awscli

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}
          aws configure set output json

      - name: Install Elastic Beanstalk CLI
        run: |
          pip3 install --upgrade awsebcli

      - name: Initialize EB CLI
        run: |
          eb init -p docker -r ${{ secrets.AWS_REGION }} ${{ secrets.AWS_APP_NAME }}

      - name: Set default environment for EB CLI
        run: |
          eb use ${{ secrets.AWS_ENV_NAME }}

      - name: Deploy to Elastic Beanstalk
        run: |
          eb deploy --profile default
